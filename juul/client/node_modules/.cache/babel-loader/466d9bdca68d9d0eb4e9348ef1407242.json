{"ast":null,"code":"import _objectSpread from \"/Users/ryandoty/Desktop/juulApp/juul/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/ryandoty/Desktop/juulApp/juul/client/src/context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubtotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = _objectSpread({}, item);\n\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = false;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      console.log(\"this is incrememnt method\");\n    };\n\n    this.decrement = id => {\n      console.log(\"this is decrement method\");\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubtotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decremnent,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/Users/ryandoty/Desktop/juulApp/juul/client/src/context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubtotal","cartTax","cartTotal","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","index","indexOf","inCart","count","price","total","addTotals","openModal","closeModal","increment","console","log","decrement","removeItem","tempCart","filter","removedProduct","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","render","decremnent","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {storeProducts , detailProduct} from './data'\n\nconst ProductContext = React.createContext();\n\n\n\nclass ProductProvider extends Component {\n\n    state = {\n        products: [],\n        detailProduct: detailProduct,\n        cart:[],\n        modalOpen: false,\n        modalProduct: detailProduct,\n        cartSubtotal:0,\n        cartTax:0,\n        cartTotal:0,\n        \n    };\n    componentDidMount() {\n        this.setProducts();\n    }\n\n    setProducts = () =>{\n        \n        let tempProducts = [];\n        storeProducts.forEach(item =>{\n            const singleItem = {...item};\n            tempProducts = [...tempProducts,singleItem];\n\n        })\n        this.setState(() =>{\n            return {products:tempProducts}\n        })\n    }\n\n\n    getItem = (id) => {\n        const product = this.state.products.find(item => item.id === id);\n        return product;\n            \n    }\n\n    handleDetail = (id) =>{\n        const product = this.getItem(id);\n        this.setState(() => {\n            return {detailProduct : product}\n        })\n    }\n\n    addToCart = (id) =>{\n        let tempProducts = [...this.state.products];\n        const index = tempProducts.indexOf(this.getItem(id));\n        const product = tempProducts[index];\n        product.inCart = false; \n        product.count = 1;\n        const price = product.price;\n        product.total = price; \n        this.setState(() => {\n            return {products:tempProducts, cart:[...this.state.cart, product]};\n\n        },() => {\n            this.addTotals();\n        })\n\n    }\n\n    // TESTER FUNCTION ============================================= //\n    // tester = () => {\n    //     console.log('State products :', this.state.products[0].inCart);\n    //     console.log('Data products :', storeProducts[0].inCart);\n\n    //     const tempProducts = [...this.state.products]; \n    //     tempProducts[0].inCart = true\n    //     this.setState(() =>{\n    //         return {products:tempProducts}\n    //     },()=>{\n    //         console.log('State products :', this.state.products[0].inCart);\n    //         console.log('Data products :', storeProducts[0].inCart);\n\n\n    //     })\n    // }\n    // TESTER FUNCTION ============================================= //\n\n\n    // making modal functionality, both open and close ================== //\n    openModal = id => {\n        const product = this.getItem(id);\n        this.setState(() => {\n            return {modalProduct:product, modalOpen: true} \n        })\n\n\n    }\n\n\n\n    closeModal = () => {\n        this.setState(() => {\n            return {modalOpen: false}\n        })\n    }\n\n    increment = (id) => {\n        console.log(\"this is incrememnt method\");\n\n    }\n\n    decrement = (id) => {\n        console.log(\"this is decrement method\");\n        \n    }\n\n    removeItem = (id) => {\n        let tempProducts = [...this.state.products];\n        let tempCart =[...this.state.cart];\n\n\n        tempCart = tempCart.filter(item => item.id !== id);\n\n        const index = tempProducts.indexOf(this.getItem(id));\n        let removedProduct = tempProducts[index];\n        removedProduct.inCart = false;\n        removedProduct.count = 0 ;\n        removedProduct.total = 0 ;\n\n        this.setState(() => {\n            return {\n                cart:[...tempCart],\n                products: [...tempProducts]\n            }\n        })\n\n\n\n\n\n    }\n\n    clearCart = () => {\n        this.setState(() => {\n            return {cart: []};\n        }, () => {\n            this.setProducts();\n            this.addTotals();\n\n        });\n    }\n\n    addTotals = () =>{\n        let subTotal = 0;\n        this.state.cart.map(item => (subTotal  += item.total))\n\n        const tempTax = subTotal * 0.1; \n        const tax = parseFloat(tempTax.toFixed(2));\n        const total = subTotal + tax \n        this.setState(() => {\n            return {\n                cartSubtotal: subTotal,\n                cartTax:tax,\n                cartTotal:total\n            }\n        })\n\n\n    }\n\n    render() {\n        return (\n\n            <ProductContext.Provider value={{\n                ...this.state,\n                handleDetail: this.handleDetail,\n                addToCart: this.addToCart,\n                openModal: this.openModal,\n                closeModal: this.closeModal,\n                increment: this.increment,\n                decrement:this.decremnent,\n                removeItem:this.removeItem,\n                clearCart: this.clearCart\n\n            }}>  \n            {/* <button onClick={this.tester}> test me </button> */}\n                {this.props.children}\n            </ProductContext.Provider>\n        );\n    }\n}\n\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport {ProductProvider, ProductConsumer}\n\n"]},"metadata":{},"sourceType":"module"}