{"ast":null,"code":"import _objectSpread from \"/Users/ryandoty/Desktop/juulApp/juul/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/ryandoty/Desktop/juulApp/juul/client/src/context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: true,\n      modalProduct: detailProduct\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = _objectSpread({}, item);\n\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        console.log(this.state);\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/Users/ryandoty/Desktop/juulApp/juul/client/src/context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","index","indexOf","inCart","count","price","total","console","log","openModal","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {storeProducts , detailProduct} from './data'\n\n\nconst ProductContext = React.createContext();\n\n\n\nclass ProductProvider extends Component {\n\n    state = {\n        products: [],\n        detailProduct: detailProduct,\n        cart:[],\n        modalOpen: true,\n        modalProduct: detailProduct, \n    };\n    componentDidMount() {\n        this.setProducts();\n    }\n\n    setProducts = () =>{\n        \n        let tempProducts = [];\n        storeProducts.forEach(item =>{\n            const singleItem = {...item};\n            tempProducts = [...tempProducts,singleItem];\n\n        })\n        this.setState(() =>{\n            return {products:tempProducts}\n        })\n    }\n\n\n    getItem = (id) => {\n        const product = this.state.products.find(item => item.id === id);\n        return product;\n            \n    }\n\n    handleDetail = (id) =>{\n        const product = this.getItem(id);\n        this.setState(() => {\n            return {detailProduct : product}\n        })\n    }\n\n    addToCart = (id) =>{\n        let tempProducts = [...this.state.products];\n        const index = tempProducts.indexOf(this.getItem(id));\n        const product = tempProducts[index];\n        product.inCart = true; \n        product.count = 1;\n        const price = product.price;\n        product.total = price; \n        this.setState(() => {\n            return {products:tempProducts, cart:[...this.state.cart, product]};\n\n        },() => {\n            console.log(this.state)\n        })\n\n    }\n\n    // TESTER FUNCTION ============================================= //\n    // tester = () => {\n    //     console.log('State products :', this.state.products[0].inCart);\n    //     console.log('Data products :', storeProducts[0].inCart);\n\n    //     const tempProducts = [...this.state.products]; \n    //     tempProducts[0].inCart = true\n    //     this.setState(() =>{\n    //         return {products:tempProducts}\n    //     },()=>{\n    //         console.log('State products :', this.state.products[0].inCart);\n    //         console.log('Data products :', storeProducts[0].inCart);\n\n\n    //     })\n    // }\n    // TESTER FUNCTION ============================================= //\n\n    openModal = id => {\n        const product = this.getItem(id);\n        this.setState(() => {\n            return {modalProduct:product, modalOpen: true} \n        })\n\n    }\n\n    render() {\n        return (\n\n            <ProductContext.Provider value={{\n                ...this.state,\n                handleDetail: this.handleDetail,\n                addToCart: this.addToCart\n\n            }}>  \n            {/* <button onClick={this.tester}> test me </button> */}\n                {this.props.children}\n            </ProductContext.Provider>\n        );\n    }\n}\n\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport {ProductProvider, ProductConsumer}\n\n"]},"metadata":{},"sourceType":"module"}